<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo使用说明</title>
    <url>/2024/09/23/hexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>主题设置：<br>在官网中找到喜欢的主题，并克隆到&#x2F;themes文件夹下</p>
<p>打开博客目录下的“<code>_config.yml</code>”文件，找到<code>theme:</code>位置，将主题改为我们要使用的主题名，我这里刚刚克隆的主题是“Next”。</p>
<p>返回Node Command Prompt，输入“<code>hexo server</code>”运行，访问<a href="http://localhost:4000/">http://localhost:4000/</a> 即可看到我们的主题已经发生改变了<br>如果你已经配置了GitHub，这时候你就可以输入“<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>”提交修改主题后的博客。</p>
<h1 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h1><h2 id="1、添加新页面"><a href="#1、添加新页面" class="headerlink" title="1、添加新页面"></a>1、添加新页面</h2><p>回到站点根目录，然后使用命令<code>hexo new page custom-name</code>创建一个<code>custom-name</code>页面。</p>
<p>如果您想添加标签或分类页面，请继续阅读，</p>
<h3 id="增加标签或分类"><a href="#增加标签或分类" class="headerlink" title="增加标签或分类"></a>增加标签或分类</h3><p>同理需创建一个标签页面：<br><code>hexo new page tags</code><br>对应<code>Hexo_Blog\source</code>下会有一个tags文件夹，里面有一个index.md文件：将其type改成tags：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2024-09-23 21:11:16</span><br><span class="line">type: tags</span><br></pre></td></tr></table></figure>

<p>对应的帖子格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: Tags Testing Article</span><br><span class="line">tags:</span><br><span class="line">  - Testing</span><br><span class="line">  - Another Tag</span><br></pre></td></tr></table></figure>

<p>同理添加分类也是先创建一个categories页面，type改成categories，</p>
<p>完整帖子示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories:  </span><br><span class="line">  - Sports  </span><br><span class="line">  - Baseball  </span><br><span class="line">tags:  </span><br><span class="line">  - Injury  </span><br><span class="line">  - Fight  </span><br><span class="line">  - Shocking</span><br></pre></td></tr></table></figure>

<h2 id="2、设置Front-matter值"><a href="#2、设置Front-matter值" class="headerlink" title="2、设置Front-matter值"></a>2、设置Front-matter值</h2><p>Front-matter 是文件开头的 YAML 或 JSON 块，用于配置您的写作设置</p>
<h2 id="3、编辑菜单"><a href="#3、编辑菜单" class="headerlink" title="3、编辑菜单"></a>3、编辑菜单</h2><p><code>custom-name</code>通过<code>menu</code>编辑添加&#x3D;&#x3D;NexT 配置文件&#x3D;&#x3D;，例如添加<code>about</code>页面：</p>
<p>NexT 配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:  </span><br><span class="line">  home: / | fa fa-home  </span><br><span class="line">  archives: /archives/ | fa fa-archive  </span><br><span class="line">  about: /about/ | fa fa-user</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy基本框架及使用</title>
    <url>/2024/09/24/scrapy%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>项目名字<br>    项目的名字<br>        spiders文件夹（存储的是爬虫文件）<br>            init<br>            自定义的爬虫文件        核心功能文件<br>        init<br>        items           定义数据结构的地方 爬虫的数据都包含哪些<br>        middleware      中间件 代理<br>        pipelines       管道  用来处理下载的数据<br>        settings        配置文件 robots协议 ua定义等</p>
<h3 id="基本步骤："><a href="#基本步骤：" class="headerlink" title="基本步骤："></a>基本步骤：</h3><h4 id="1-新建项目-：新建一个新的爬虫项目"><a href="#1-新建项目-：新建一个新的爬虫项目" class="headerlink" title="1 新建项目 ：新建一个新的爬虫项目"></a>1 新建项目 ：新建一个新的爬虫项目</h4> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">打开cmd，输入scrapy startproject 项目的名字</span><br><span class="line">(默认是在C:\Users\...这个目录下，你可以自行切换到对应的 文件下）</span><br><span class="line">注意：项目的名字不允许使用数字开头 也不能包含中文</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="2、明确目标-（items-py）：明确你想要抓取的目标"><a href="#2、明确目标-（items-py）：明确你想要抓取的目标" class="headerlink" title="2、明确目标 （items.py）：明确你想要抓取的目标"></a>2、明确目标 （items.py）：明确你想要抓取的目标</h4><p>选择你需要爬取的内容，例如作者名字、小说名、封面图片等<br>在items.py文件中定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import scrapy</span><br><span class="line">class AdicrawlerItem(scrapy.Item):</span><br><span class="line">    author = scrapy.Field()</span><br><span class="line">    theme = scrapy.Field()</span><br><span class="line">    # 以上定义了两个变量 分别是作者名、主题。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3、制作爬虫-（spiders-xxspider-py）：制作爬虫开始爬取网页"><a href="#3、制作爬虫-（spiders-xxspider-py）：制作爬虫开始爬取网页" class="headerlink" title="3、制作爬虫 （spiders&#x2F;xxspider.py）：制作爬虫开始爬取网页"></a>3、制作爬虫 （spiders&#x2F;xxspider.py）：制作爬虫开始爬取网页</h4><p>创建爬虫文件：</p>
<pre><code>要在spiders文件在去创建爬虫文件
     cd 项目的名字\项目的名字\spiders
     eg : cd scrapy_baidu\scrapy_baidu\spiders

创建爬虫文件
 	scrapy genspider 爬虫文件的名字 要爬的网页
 	eg : scrapy genspider baidu www.baidu.com
  	一般情况下不需要添加http协议
  	因为start_urls的值是根据allowed_domains修改的
</code></pre>
<p>爬虫文件的解释：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import scrapy</span><br><span class="line">class BaiduSpider(scrapy.Spider):</span><br><span class="line">    # 爬虫的名字 一般运行爬虫的时候 使用的值</span><br><span class="line">    name = &#x27;baidu&#x27;</span><br><span class="line">    # 允许访问的域名</span><br><span class="line">    allowed_domains = [&#x27;www.baidu.com&#x27;]</span><br><span class="line">    # 起始的url地址  指的是第一次要访问的域名</span><br><span class="line">    # start_urls   是在allowed_domains的前面添加一个http：//</span><br><span class="line">    #              是在allowed_domains的后面添加一个/</span><br><span class="line">    # 如果以html结尾 就不用加/ 否则网站进不去  报错</span><br><span class="line">    start_urls = [&#x27;http://www.baidu.com/&#x27;]</span><br><span class="line"></span><br><span class="line">    # 是执行了start_urls之后  执行的方法</span><br><span class="line">    # 方法中的response  就是返回的那个对象</span><br><span class="line">    # 相当于 response = urllib.request.urlopen()</span><br><span class="line">    #       response = requests.get()</span><br><span class="line">    def parse(self, response):</span><br><span class="line">        pass</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>response的属性和方法</p>
<pre><code>response.text  获取的是响应的字符串
response.body  获取的是二进制数据
response.xpath  可以直接使用xpath方法来解析response中的内容
response.extract()  提取seletor对象的data属性值
response.extract_first()  提取的seletor列表的第一个数据
</code></pre>
<p>baidu.py:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import scrapy</span><br><span class="line">from AdiCrawler.items import AdicrawlerItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ThousandpicSpider(scrapy.Spider):</span><br><span class="line">    name = &#x27;thousandpic&#x27;</span><br><span class="line">    allowed_domains = [&#x27;www.58pic.com&#x27;]</span><br><span class="line">    start_urls = [&#x27;http://www.58pic.com/c/&#x27;]</span><br><span class="line"></span><br><span class="line">    def parse(self, response):</span><br><span class="line">        author = response.xpath(&#x27;//div[@class=&quot;wrap-list fl&quot;]//span[@class=&quot;fl info-h1&quot;]/text()&#x27;).extract()</span><br><span class="line">        theme = response.xpath(&#x27;//div[@class=&quot;wrap-list fl&quot;]//span[@class=&quot;usernameColor&quot;]/text()&#x27;).extract()</span><br><span class="line">        item = AdicrawlerItem(author=author,theme=theme)</span><br><span class="line">        yield item</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="4、存储内容"><a href="#4、存储内容" class="headerlink" title="4、存储内容"></a>4、存储内容</h4><h5 id="方法一：编辑settings-py文件"><a href="#方法一：编辑settings-py文件" class="headerlink" title="方法一：编辑settings.py文件"></a>方法一：编辑settings.py文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#编辑settings.py文件，将输出格式设置为CSV</span><br><span class="line">FEED_FORMAT = &#x27;csv&#x27;</span><br><span class="line">FEED_URI = &#x27;NDSS2024.csv&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>有报错时可以改为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FEEDS = &#123;</span><br><span class="line">    &#x27;NDSS2024.csv&#x27;: &#123;</span><br><span class="line">        &#x27;format&#x27;: &#x27;csv&#x27;,</span><br><span class="line">        &#x27;overwrite&#x27;: True,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="方法二：管道存储"><a href="#方法二：管道存储" class="headerlink" title="方法二：管道存储"></a>方法二：管道存储</h5><p>（pipelines.py）：设计管道存储爬取内容<br>如果想使用管道的话 那么就必须在settings.py中开启管道</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">	    # 管道可以有很多个 那么管道是有优先级 优先级的范围是1到1000 值越小优先级越高</span><br><span class="line">	   &#x27;scrapy_dangdang.pipelines.ScrapyDangdangPipeline&#x27;: 300,</span><br><span class="line">&#125;</span><br><span class="line">    	# 将在settings.py中这段话取消注释，则打开了通道。</span><br><span class="line">    	</span><br></pre></td></tr></table></figure>



<p>然后去pippelines.py中设计管道：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class ScrapyDangdangPipeline:</span><br><span class="line"></span><br><span class="line">    def open_spider(self,spider):</span><br><span class="line">        self.fp = open(&#x27;doubanBookTop250.csv&#x27;,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;)</span><br><span class="line"></span><br><span class="line">    # item就是yield后面的对象</span><br><span class="line">    def process_item(self, item, spider):   </span><br><span class="line">        self.fp.write(str(item))</span><br><span class="line">        return item</span><br><span class="line"></span><br><span class="line">    def close_spider(self,spider):</span><br><span class="line">        self.fp.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5、运行爬虫"><a href="#5、运行爬虫" class="headerlink" title="5、运行爬虫"></a>5、运行爬虫</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在cmd中输入：scrapy crawl 爬虫的名字 eg:scrapy crawl baidu</span><br></pre></td></tr></table></figure>

<h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><h4 id="不显示日志"><a href="#不显示日志" class="headerlink" title="不显示日志"></a>不显示日志</h4><p>可以再settings.py中加入下列两行代码不显示日志</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 写下列两行代码可以不显示日志</span><br><span class="line">LOG_LEVEL = &#x27;WARNING&#x27;</span><br><span class="line">ROBOTSTXT_OBEY = False</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="反爬虫"><a href="#反爬虫" class="headerlink" title="反爬虫"></a>反爬虫</h4><p>当访问不了页面,报错403时：<br>在settings.py文件中加入下列代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">USER_AGENT = &#x27;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&#x27;</span><br></pre></td></tr></table></figure>

<p>报错404时：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 报404的错改成False</span><br><span class="line">### Obey robots.txt rules</span><br><span class="line">ROBOTSTXT_OBEY = False</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title>ATT&amp;CK框架</title>
    <url>/2024/10/25/ATT-CK%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h1 id="ATT-CK框架介绍"><a href="#ATT-CK框架介绍" class="headerlink" title="ATT&amp;CK框架介绍"></a>ATT&amp;CK框架介绍</h1><p>MITRE ATT&amp;CK框架提供了一个全面的对手战术、技术和程序<font color="#f79646">（TTP）</font>目录，作为<font color="#f79646">破译攻击者行为</font>和<font color="#f79646">增强防御措施</font>的宝贵资源。</p>
<p><a href="https://attack.mitre.org/">ATT&amp;CK</a>是由MITRE机构开发的攻击模型框架，其全称为Adversarial Tactics, Techniques, and Common Knowledge（对抗性战术，技术以及公共知识库），是一个基于现实世界所观察到的攻击向量所组成的一个公开的对抗性战术和技术知识库，是以骇客的视角，针对网络攻击入侵进行分类和说明的指南。</p>
<p><code>ATT&amp;CK</code>是 <strong>基于真实世界观察的对抗技术知识库</strong> 。ATT&amp;CK 专注于攻击者在操作过程中 <strong>如何与系统交互</strong> ，反映攻击者攻击生命周期的各个阶段以及不同平台使用的各种技术。</p>
<p><code>ATT&amp;CK</code>很大程度上是对抗性技术的知识库，对抗性技术是对可用于特定平台（如Windows）的攻击性操作的细分和分类。与该领域之前的工作不同，重点 <strong>不在于对手使用的工具和恶意软件</strong> ，而在于他们 <strong>在操作过程中如何与系统交互</strong> 。</p>
<p>当我们提到ATT&amp;CK时表示的含义可以分为两个方面：狭义上的和广义上的。<strong>广义</strong>上的ATT&amp;CK是指包含攻击技术，缓解技术和公共知识库等多方面的集合，而大多数情况下，我们使用这个词汇所表达的含义往往是<strong>狭义</strong>上的，单单表示其攻击框架的内容，而这一框架内容总体又可以分为三个维度</p>
<ul>
<li><strong>Matrices</strong>：矩阵维度切分各个安全领域，形成宏观视角</li>
<li><strong>Tactics</strong>：战术维度，定义攻击流程的各个环节类型</li>
<li><strong>Techniques</strong>：技术维度，完成攻击环节的具体细节及技术</li>
</ul>
<p><code>ATT&amp;CK</code>由 <strong>一系列技术领域组</strong> 成，即对手在其中运作的生态系统。目前，有三个 <strong>技术</strong> 领域：</p>
<ul>
<li><strong>企业，</strong> 代表传统的企业IT网络和云服务</li>
<li><strong>移动，</strong> 移动端设备</li>
<li>用于工业控制系统的 <strong>ICS</strong></li>
</ul>
<p>每个域中都有平台，可以是操作系统或应用程序（例如 Microsoft Windows）。技术和子技术可以应用于多个平台。</p>
<h1 id="ATT-CK框架的构成"><a href="#ATT-CK框架的构成" class="headerlink" title="ATT&amp;CK框架的构成"></a>ATT&amp;CK框架的构成</h1><p>ATT&amp;CK各个字母的含义，即战术、技术和常识，这三者构成了整个ATT&amp;CK知识库。为了更加精确的划分和更加深入的理解，将战术、技术和常识细分为了9个组件：<font color="#f79646">战术、技术、子技术</font>、数据源、缓解措施、资产、攻击组织、软件、攻击活动，这9个组件是 官网信息的主要构成部分 ，也是 Navigator工具搜索控件的目标 。</p>
<p>在ATT&amp;CK框架中，上述9个组件是 <strong>通过技术关联</strong> 起来的，如下图所示：（资产组件专属于ICS领域）<br><img src="/2024/10/25/ATT-CK%E6%A1%86%E6%9E%B6/ATT&CK-1.png" alt="ATT&amp;CK-1.png"></p>
<h3 id="组件：战术、技术、子技术"><a href="#组件：战术、技术、子技术" class="headerlink" title="组件：战术、技术、子技术"></a>组件：战术、技术、子技术</h3><p>战术、技术与子技术是ATT&amp;CK框架的核心</p>
<p>打开官网<a href="https://attack.mitre.org/">MITRE ATT&amp;CK®</a>，首页会给出一个矩阵，如下：<br><img src="/2024/10/25/ATT-CK%E6%A1%86%E6%9E%B6/ATT&CK-2.png" alt="ATT&amp;CK-2.png"></p>
<p>这个矩阵的 <strong>内容很容易理解</strong> ：</p>
<ul>
<li>可以根据 <strong>不同的技术领域</strong> 选择不同的矩阵，如<code>Enterprise、Mobile、ICS</code>（首页给出的是Enterprise，因为该领域是应用范围最广、涉及知识最详细的）</li>
<li>可以在题目下方 <strong>选择布局</strong> （<code>side</code>和<code>flat</code>，在Navigator中还有<code>Mini</code>）、选择是否 <strong>显示子技术</strong></li>
<li>矩阵的 <strong>第一行</strong> 是框架中的 <strong>14个战术</strong> ，可以点击链接到具体介绍</li>
<li>矩阵的 <strong>每一列</strong> 对应该战术包含的 <strong>技术和子技术</strong> ，同样的，可以点击链接到具体介绍</li>
</ul>
<p>除了矩阵这一直观显示方式，也可以在 <strong>菜单栏选择</strong> 战术或者技术汇总，如下图：<br><img src="/2024/10/25/ATT-CK%E6%A1%86%E6%9E%B6/ATT&CK-3.png" alt="ATT&amp;CK-3.png"></p>
<h3 id="其他组件待补充"><a href="#其他组件待补充" class="headerlink" title="其他组件待补充"></a>其他组件待补充</h3><h1 id="各战术宏观介绍"><a href="#各战术宏观介绍" class="headerlink" title="各战术宏观介绍"></a>各战术宏观介绍</h1><p>ATT&amp;CK的内容很多，但是其 <strong>核心内容一定是战术与技术</strong> ，因为篇幅有限，下面会从 <strong>宏观角度</strong> 对这些战术和技术进行介绍</p>
<p><strong>战术梳理：</strong> 截止到<code>2024-3，v14版本、Enterprise领域下</code>的战术整合如下</p>
<table>
<thead>
<tr>
<th>战术编号</th>
<th>战术名称（英）</th>
<th>战术名称（译）</th>
<th>技术数量（不含子技术）</th>
</tr>
</thead>
<tbody><tr>
<td>TA0043</td>
<td>Reconnaissance</td>
<td>侦察</td>
<td>10</td>
</tr>
<tr>
<td>TA0042</td>
<td>Resource Development</td>
<td>资源开发</td>
<td>8</td>
</tr>
<tr>
<td>TA0001</td>
<td>Initial Access</td>
<td>初始访问</td>
<td>10</td>
</tr>
<tr>
<td>TA0002</td>
<td>Execution</td>
<td>攻击执行</td>
<td>14</td>
</tr>
<tr>
<td>TA0003</td>
<td>Persistence</td>
<td>持久化</td>
<td>20</td>
</tr>
<tr>
<td>TA0004</td>
<td>Privilege Escalation</td>
<td>权限提升</td>
<td>14</td>
</tr>
<tr>
<td>TA0005</td>
<td>Defense Evasion</td>
<td>防御规避</td>
<td>43</td>
</tr>
<tr>
<td>TA0006</td>
<td>Credential Access</td>
<td>凭证访问</td>
<td>17</td>
</tr>
<tr>
<td>TA0007</td>
<td>Discovery</td>
<td>环境发现</td>
<td>32</td>
</tr>
<tr>
<td>TA0008</td>
<td>Lateral Movement</td>
<td>横向移动</td>
<td>9</td>
</tr>
<tr>
<td>TA0009</td>
<td>Collection</td>
<td>信息收集</td>
<td>17</td>
</tr>
<tr>
<td>TA0011</td>
<td>Command and Control</td>
<td>指令与控制</td>
<td>17</td>
</tr>
<tr>
<td>TA0010</td>
<td>Exfiltration</td>
<td>数据窃取</td>
<td>9</td>
</tr>
<tr>
<td>TA0040</td>
<td>Impact</td>
<td>危害影响</td>
<td>14</td>
</tr>
</tbody></table>
<p>下面具体介绍这些战术的相关信息，不会很详细，旨在 <strong>从宏观上了解、构建一个简略的攻击模型</strong> ，为后续深入学习做铺垫。</p>
<h2 id="战术：侦察"><a href="#战术：侦察" class="headerlink" title="战术：侦察"></a>战术：侦察</h2><p>不论是APT组织进行攻击，还是红队进行安全演练、渗透测试，都会在正式攻击之前 <strong>收集相关的有用信息</strong> ，以规划后续具体行动。这些信息可能包括受害 <strong>组织、设备、受害人的基本信息</strong> ，例如<code>组织网络架构、员工身份信息</code>等；采取的 <strong>技术措施也很多</strong> ，如<code>钓鱼攻击</code>、<code>公开数据库搜索</code>（如WHOIS、CDNs等）、<code>公开网站搜索</code>（如搜索引擎、社交媒体等）等等。</p>
<h2 id="战术：资源开发"><a href="#战术：资源开发" class="headerlink" title="战术：资源开发"></a>战术：资源开发</h2><p><strong>资源开发</strong> 是指攻击者在开展具体攻击前会开发一些 <strong>后续使用的相关资源</strong> ，开发方式包括<code>创建、购买、窃取</code>等，开发的资源具体包括 <strong>基础设施</strong> （<code>域、DNS服务器、Web服务、VPS</code>等）、 <strong>账户</strong> （<code>社交媒体、电子邮件、云账户</code>等）、 <strong>能力</strong> （<code>恶意软件、数字证书、exp</code>等）。</p>
<h2 id="战术：初始访问"><a href="#战术：初始访问" class="headerlink" title="战术：初始访问"></a>战术：初始访问</h2><p>之前两个战术（<code>侦察与资源开发</code>）属于 <strong>攻击前阶段</strong> ，用于为后续攻击 <strong>提供信息和资源</strong> ；而 <strong>攻击阶段</strong> 便会介绍具体攻击时涉及的战术和使用的技术。攻击阶段的 <strong>第一个战术</strong> 是<code>初始访问</code>。</p>
<p>初始访问是指 <strong>攻击者在目标网络环境中建立立足点</strong> ，攻击者会借助攻击前阶段收集的信息，利用不同的技术来实现初始访问。常用的攻击技术报价鱼叉式钓鱼<code>T1566</code>或者针对Web服务漏洞<code>T1190</code>等。</p>
<p>与侦察和资源开发战术不同，初始访问涵盖的技术是 <strong>典型的攻击行为</strong> ，所以有很多对应的 <strong>缓解措施和检测方法</strong> 。比如，针对 <strong>水坑攻击</strong> ，可以采取<code>软件更新（M1051）</code>、<code>应用沙盒隔离（M1048）</code>等方法来 <strong>缓解</strong> ，采取<code>网络流量监测（DS0029）</code>、<code>应用日志审计（DS0015）</code>等方法来 <strong>检测</strong> 。</p>
<h2 id="战术：攻击执行"><a href="#战术：攻击执行" class="headerlink" title="战术：攻击执行"></a>战术：攻击执行</h2><p>攻击执行战术是指攻击者 <strong>尝试运行恶意代码</strong> ，包括在本地或者远程执行恶意代码的技术。这些技术大体可以分为实体恶意软件执行和无落地文件执行（如命令行、powershell等）。</p>
<p>该战术中的技术通常与 <strong>其他战术联动</strong> 实现更加广泛的目标（信息窃取、环境探测等），例如通过 <strong>初始访问战术</strong> 中的<code>利用远程外部服务T1133</code>来执行<code>Powershell脚本T1059.001</code>。</p>
<p>攻击执行战术中采取的技术有很多对应的缓解措施和检测方法。例如，针对<code>利用命令和脚本解释器T1059</code>技术，可以采取<code>安装防病毒软件M1049</code>、<code>检测签名（M1045）</code>、<code>禁用或删除某些功能T1042</code>等方法 <strong>缓解和预防</strong> ，可以采取<code>监视执行的命令和参数DS0017</code>、<code>监视有关正在运行进程的上下文数据DS0009</code>等方法检测攻击行为。</p>
<h2 id="战术：持久化"><a href="#战术：持久化" class="headerlink" title="战术：持久化"></a>战术：持久化</h2><p>初始访问战术在目标网络环境中建立了立足点， <strong>持久化战术</strong> 便是为了 <strong>长久保持这些立足点</strong> ，即受害者即使重启、修改凭证仍然可以保证攻击者对系统的持续访问。</p>
<p>常用的技术包括<code>利用计划任务T1542</code>、<code>修改身份认证T1556</code>、<code>劫持进程T1574</code>（DLL劫持、利用环境变量等）、<code>创建或修改系统进程T1543</code>(利用系统服务、守护进程等)等等。</p>
<p>持久化战术是所有战术中子技术第二多的战术，也就是说可以完成持久化操作的方法非常多，所以持久化应该是最应该被重视的战术。</p>
<h2 id="战术：提权"><a href="#战术：提权" class="headerlink" title="战术：提权"></a>战术：提权</h2><p>该战术是指攻击者 <strong>正试图获取更高权限</strong> 。</p>
<p>权限提升战术是指攻击者用来在系统或网络中获得更高权限的一系列技术。对手通常能够以 <strong>非特权身份进入</strong> 并探索网络，但为了实现其目标，他们需要获得更高的权限。常见的技术包括：<code>利用漏洞提权T1068、容器逃逸T1611、进程注入T1055、操纵访问令牌T1134</code>等。</p>
<p>相关权限包括：</p>
<ol>
<li>系统级（SYSTEM）或根级（root）权限</li>
<li>本地管理员权限</li>
<li>拥有类似管理员权限的用户账户</li>
<li>具有访问特定系统或执行特定功能权限的用户账户</li>
</ol>
<p>这些权限提升技术往往与 <strong>持久化技术相互重叠</strong> ，因为操作系统中的某些能让对手保持持久存在的功能可以以提权的方式执行。</p>
<h2 id="战术：防御规避"><a href="#战术：防御规避" class="headerlink" title="战术：防御规避"></a>战术：防御规避</h2><p>该战术是指攻击者 <strong>正试图避免被检测到</strong> 。</p>
<p>防御规避战术包含了对手在入侵过程中所采用的各类逃避检测技术。这些技术包括<code>卸载/禁用安全软件</code>，或者<code>对数据和脚本进行混淆/加密处理</code>。此外，对手还会<code>利用受信任的进程</code>来隐藏和伪装其恶意软件。当其他战术中的技术同时具有绕过防御机制的附加优势时，也会在此处交叉列出。</p>
<h2 id="战术：凭证访问"><a href="#战术：凭证访问" class="headerlink" title="战术：凭证访问"></a>战术：凭证访问</h2><p>该战术是指攻击者 <strong>正试图窃取账号、密码等凭证信息</strong> 。</p>
<p>该战术包括一系列用于窃取如账号名和密码等凭证的技术。获取凭证的方法包括<code>键盘记录（keylogging）或凭证转储（credential dumping）</code>。通过合法的凭证，对手可以获得对系统的访问权限，并有机会创建更多账户来帮助实现他们的目标。</p>
<h2 id="战术：环境发现"><a href="#战术：环境发现" class="headerlink" title="战术：环境发现"></a>战术：环境发现</h2><p>该战术是指攻击者 <strong>正试图了解目标系统的网络环境</strong> 。</p>
<p>攻击者可能采取各种技术以 <strong>获取有关系统和内部网络的知识</strong> 。这些技术帮助攻击者在进行后续攻击之前 <strong>对环境进行观察和自我定位</strong> 。</p>
<p>攻击者可能侦察的目标有<code>浏览器书签T1217、云服务相关信息、注册表信息T1012、进程信息T1057、软件信息T1518、地理位置信息T1614、系统网络配置信息T1016、系统服务信息T1007、系统时间信息T1124</code>等等。</p>
<h2 id="战术：横向移动"><a href="#战术：横向移动" class="headerlink" title="战术：横向移动"></a>战术：横向移动</h2><p>该战术是指对手 <strong>试图在目标网络环境中移动渗透</strong> 。</p>
<p>横向移动是指对手在网络中使用各种技术以进入并控制远程系统。为了实现主要目标，对手通常需要探索网络 <strong>找到目标</strong> ，并随后获取对目标的 <strong>访问权限</strong> 。达成目标的过程中，往往涉及通过多个系统和账户进行 <strong>跳跃式渗透</strong> 。</p>
<p>在横向移动的过程中，攻击者可能会利用<code>远程服务漏洞T1210</code>、<code>使用内部钓鱼攻击T1534</code>、<code>劫持远程服务会话T1563</code>等技术。</p>
<h2 id="战术：信息收集"><a href="#战术：信息收集" class="headerlink" title="战术：信息收集"></a>战术：信息收集</h2><p>该战术是指攻击者正 <strong>试图收集与其目标相关的、感兴趣的数据</strong> 。</p>
<p>信息收集战术包括对手可能会采用的各种技术，以便从与目标相关的各种数据源中获取信息。通常情况下，在收集到数据之后的下一步便是窃取（外泄）这些数据，参见<code>战术数据窃取TA0010</code>。常见的数据来源包括<code>各类驱动器、浏览器、音频、视频和电子邮件</code>等。常用的数据收集方法包括<code>截屏和键盘输入记录</code>。</p>
<h2 id="战术：命令与控制"><a href="#战术：命令与控制" class="headerlink" title="战术：命令与控制"></a>战术：命令与控制</h2><p>该战术是指对手正试图 <strong>与受控系统进行通信以操控它们</strong> 。</p>
<p>命令与控制战术包括对手可能会使用的各种技术，以便在受害者的网络内部与其控制下的系统进行通信。为了规避检测，对手通常会 <strong>尝试模仿正常、预期的网络流量</strong> 。根据受害者网络结构和防御机制的不同，攻击者有多种方式可以建立具有不同程度隐匿性的命令与控制通道。</p>
<p>该战术常见的技术包括<code>使用应用层协议T1071、通过可移动介质通信T1092、使用备用信道T1008、利用远程访问软件T1219等</code>，在通信过程中也会<code>编码数据T1132、混淆数据T1001、使用动态参数T1568、使用加密信道T1573</code>以保证通信的隐蔽性。</p>
<h2 id="战术：数据窃取"><a href="#战术：数据窃取" class="headerlink" title="战术：数据窃取"></a>战术：数据窃取</h2><p>该战术是指 <strong>攻击者在试图窃取数据</strong> 。一旦收集到数据，对手通常会对其进行 <strong>打包处理</strong> 以避免在传递过程中被检测到，这可能涉及压缩和加密等操作。将数据从目标网络中取出的常用技术包括<code>使用C2信道回传T1041、使用物理介质回传T1052、使用Web服务回传T1567、使用云账户T1537</code>等，可能会限制传递的数据大小。</p>
<h2 id="战术：危害影响"><a href="#战术：危害影响" class="headerlink" title="战术：危害影响"></a>战术：危害影响</h2><p><strong>危害影响战术</strong> 是指攻击者 <strong>试图操控、中断或破坏目标的系统和数据</strong> 。</p>
<p>该战术包含一系列技术，这些技术被攻击者利用以通过 <strong>操纵业务和运营流程</strong> 来干扰系统的可用性或破坏信息的完整性。实现该战术的技术包括<code>删除账户权限T1531</code>、<code>破坏数据T1485、数据加密T1486、操纵数据T1565、篡改内容T1491、擦除磁盘T1561、损坏固件T1495</code>等。具体详见后续系列。</p>
<p>在某些情况下，虽然业务流程表面上看似正常运行，但实际上可能已被对手为了达成自身目标而进行了篡改。</p>
]]></content>
      <tags>
        <tag>ATT&amp;CK</tag>
      </tags>
  </entry>
  <entry>
    <title>威胁情报</title>
    <url>/2024/10/25/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/</url>
    <content><![CDATA[<h1 id="情报"><a href="#情报" class="headerlink" title="情报"></a>情报</h1><p><strong>情报是为实现主体某种特定目的，有意识地对有关的事实、数据、信息、知识等要素进行劳动加工的产物</strong></p>
<ul>
<li>目的性。情报作为一种产物，其一定能够被使用达到某种目的。如果不能进行利用的信息，不能称之为情报。</li>
<li>意识性。情报的生产主体，一定是有主观动机。其加工的情报，也一定带有主观的意识判断。这和情报目的性是相辅相成的。</li>
<li>附属性。情报是附属在事实、数据、信息、知识这些载体之上，从中提取加工和转化而来的。</li>
<li>劳动加工性。情报一定是加工后的产物。一定是经过分析、研判之后的产物。所以表层的信息，一定不是情报。</li>
</ul>
<h1 id="威胁情报Cyber-Threat-Intelligence-CTI"><a href="#威胁情报Cyber-Threat-Intelligence-CTI" class="headerlink" title="威胁情报Cyber Threat Intelligence (CTI)"></a>威胁情报Cyber Threat Intelligence (CTI)</h1><p>威胁情报（也称为“网络威胁情报”(CTI)）是用于预防和对抗针对组织的网络安全威胁的详细、可操作的威胁信息。</p>
<p>威胁情报可帮助安全团队更加主动，使他们能够采取有效的数据驱动行动，在网络攻击发生之前予以防止。它还可以帮助组织更快地检测和响应正在进行的攻击。</p>
<p>安全分析师通过从多个来源收集原始威胁信息和安全相关信息，然后关联和分析数据以发现趋势、模式和关系，从而深入了解实际或潜在威胁，从而创建威胁情报。由此产生的情报是</p>
<ul>
<li><strong>特定于组织的</strong>，不关注一般性问题（例如，常见<a href="https://www.ibm.com/cn-zh/topics/malware">恶意软件</a>系列的列表），而是关注组织攻击面中的特定漏洞、它们可促成的攻击以及它们暴露的资产。  </li>
<li><strong>详细且与上下文相关的</strong>，不仅涵盖针对公司的威胁，还涵盖可能实施攻击的威胁参与者、这些威胁参与者使用的策略、技术和程序 (TTP) 以及可能表征特定<a href="https://www.ibm.com/cn-zh/topics/cyber-attack">网络攻击</a>的入侵指标 (IoC)。  </li>
<li><strong>可操作的</strong>，提供安全团队可用于处理漏洞、区分优先度并补救威胁，甚至评估现有或新网络安全工具的信息。</li>
</ul>
<h1 id="威胁情报生命周期"><a href="#威胁情报生命周期" class="headerlink" title="威胁情报生命周期"></a>威胁情报生命周期</h1><p>威胁情报生命周期是一个迭代的、持续的过程，安全团队通过该过程生成、传播和不断改进其威胁情报。尽管各个组织的具体细节可能有所不同，但大多数组织都遵循相同的六步流程的某个版本。</p>
<p><strong>步骤 1：规划</strong></p>
<p>安全分析师与组织利益相关者（执行领导、部门主管、IT 和安全团队成员以及其他参与网络安全决策的人员）合作制定情报要求。这些通常包括利益相关者希望或需要回答的网络安全问题。例如，CISO 可能想知道一种新的、引起关注的<a href="https://www.ibm.com/cn-zh/topics/ransomware">勒索软件</a>是否会对组织造成影响。</p>
<p><strong>步骤 2：威胁数据收集</strong></p>
<p>安全团队收集任何原始威胁数据，这些数据可以给出（或有助于得出）利益相关者正在寻找的答案。回到上面的例子，如果一个安全团队正在调查一种新的勒索软件，该团队可能会收集有关攻击背后的勒索软件团伙的信息、他们过去攻击的组织类型以及他们用来感染以前受害者的攻击媒介。</p>
<p>这些威胁数据可能获取自多种来源，包括：</p>
<p><strong>威胁情报信息源</strong> - 实时威胁信息流。这个名称有时会产生误导：虽然一些信息源包含经过处理或分析的威胁情报，但另一些信息源却只包含原始威胁数据。（后者有时被称为“威胁数据信息源”。）</p>
<p>安全团队通常会订阅多个开源和商业信息源。例如，不同的信息源可能</p>
<ul>
<li>跟踪常见攻击的 IoC、</li>
<li>汇总网络安全新闻、</li>
<li>对恶意软件类型进行详细分析</li>
<li>并抓取社交媒体和暗网，以获取围绕新出现的网络威胁的对话。</li>
</ul>
<p>所有这些信息源都有助于加深对威胁的了解。</p>
<p>在美国，许多关键基础设施行业，例如医疗保健、金融服务以及石油和天然气行业，都运营有行业特定的信息共享和分析中心 (ISAC)。这些 ISAC 通过<a href="https://www.nationalisacs.org/">国家 ISAC 委员会 (NSI)</a>（ibm.com 外部链接）相互协调。</p>
<p>在国际上，开源 <a href="https://www.misp-project.org/">MISP 威胁共享情报平台</a>（ibm.com 外部链接）支持围绕不同地点、行业和主题组织的多个信息共享社区。MISP 得到了 NATO 和欧盟的财政支持。</p>
<p><strong>内部安全日志</strong> - 来自安全和合规系统的内部安全数据，如</p>
<ol>
<li><a href="https://www.ibm.com/cn-zh/topics/siem">SIEM（安全信息与响应）</a></li>
<li>SOAR（安全编排、自动化和响应）</li>
<li><a href="https://www.ibm.com/cn-zh/topics/edr">EDR（端点检测和响应）</a></li>
<li>XDR（扩展检测和响应）</li>
<li><a href="https://www.ibm.com/cn-zh/topics/attack-surface-management">攻击面管理 (ASM)</a> 系统</li>
</ol>
<p>这些数据记录了组织面临的威胁和网络攻击，可以帮助发现以前未识别的内部或外部威胁的证据。</p>
<p>来自这些不同来源的信息通常会汇总在集中式仪表板（例如 SIEM 或威胁情报平台）中以便于管理。</p>
<p><strong>步骤 3：处理</strong></p>
<p>在此阶段，安全分析师对他们收集的原始数据进行汇总、标准化和关联，以便更轻松地进行分析。这可能包括过滤掉误报或将威胁情报框架（例如 MITRE ATT&amp;CK）应用于与先前安全事件相关的数据。</p>
<p>许多威胁情报工具使用人工智能 (AI) 和机器学习来关联来自多个源的威胁信息并识别数据中的初始趋势或模式，从而自动执行此处理。</p>
<p><strong>步骤 4：分析</strong></p>
<p>分析是将原始威胁数据转化为真正威胁情报的关键。在此阶段，安全分析师测试并验证趋势、模式和其他见解，以便用于满足利益相关者的安全要求并提出建议。</p>
<p>例如，安全分析师可能会发现，与新的勒索软件病毒有关的团伙已经开始针对该组织所在行业中的其他企业。然后团队将识别该团伙可能会利用的组织 IT 基础架构中的特定漏洞以及可能缓解或消除这些漏洞的安全控制措施或补丁。</p>
<p><strong>第 5 步：传播</strong></p>
<p>安全团队与适当的利益相关者分享其见解和建议。可以根据这些建议采取行动，例如建立新的 SIEM 检测规则以瞄准新识别的 IoC，或更新防火墙黑名单，阻止来自新识别的可疑 IP 地址的流量。</p>
<p>许多威胁情报工具与 SOAR 或 XDR 等安全工具集成并共享数据，以自动生成主动攻击警报、针对威胁优先度给出风险评分或触发其他操作。</p>
<p><strong>第 6 步：反馈</strong></p>
<p>在此阶段，利益相关者和分析人员反思最新的威胁情报周期，以确定要求是否得到满足。出现的任何新问题或发现的新情报差距都将为下一轮生命周期提供信息。</p>
<h1 id="威胁情报类型"><a href="#威胁情报类型" class="headerlink" title="威胁情报类型"></a>威胁情报类型</h1><p>威胁情报生命周期会根据所涉及的利益相关者、设置的要求以及生命周期中给定实例的总体目标，生成不同类型的情报。威胁情报分为三大类：</p>
<h2 id="三大类别"><a href="#三大类别" class="headerlink" title="三大类别"></a>三大类别</h2><p>大多数威胁情报符合以下三类中的一类：</p>
<ol>
<li><strong>战略情报</strong>描述整体趋势和长期问题。它还可以包括已知攻击者的动机、目标和方法。</li>
<li><strong>行动情报</strong>描述攻击者使用的战术、技术和程序 (TTP)——例如，攻击者使用哪些<a href="https://www.cloudflare.com/learning/ddos/glossary/malware/">恶意软件</a>工具包或漏洞工具包，他们的攻击来自哪里，或他们通常遵循哪些步骤来发动攻击。</li>
<li><strong>战术情报</strong>是有关威胁的具体实地细节；它让组织能够具体识别威胁。恶意软件特征码和入侵指标 (IoC) 是战术情报的示例。这两个术语将在下文中进行进一步解释。</li>
</ol>
<h2 id="什么是恶意软件特征码？"><a href="#什么是恶意软件特征码？" class="headerlink" title="什么是恶意软件特征码？"></a>什么是恶意软件特征码？</h2><p>特征码是可以<strong>识别恶意软件的独特模式或字节序列</strong>。与指纹用于识别犯罪嫌疑人的方式相同，特征码有助于识别恶意软件。</p>
<p>特征码检测是最常见的恶意软件分析形式之一。为了有效，特征码检测需要不断更新最新的恶意软件特征码。</p>
<h2 id="什么是入侵指标-IoC-？"><a href="#什么是入侵指标-IoC-？" class="headerlink" title="什么是入侵指标 (IoC)？"></a>什么是入侵指标 (IoC)？</h2><p><a href="https://www.cloudflare.com/learning/security/what-are-indicators-of-compromise/">入侵指标 (IoC)</a> 是指<strong>表明系统已经被网络威胁渗透的数据</strong>。IoC 就像是一件物证，侦探可能会收集物证用于确定谁出现在犯罪现场。同样地，某些数字证据（日志记录中的异常活动、流向未经授权的服务器的网络流量等）有助于管理员确定何时发生了（或当前正在发生）攻击以及攻击类型。</p>
<p>如果没有 IoC，有时可能很难确定是否发生了攻击；保持不被发现通常有利于攻击者（例如，如果他们想在<a href="https://www.cloudflare.com/learning/ddos/what-is-a-ddos-botnet/">僵尸网络</a>中使用受感染的设备）。</p>
]]></content>
      <categories>
        <category>威胁情报</category>
      </categories>
  </entry>
  <entry>
    <title>安全操作系统设计</title>
    <url>/2024/09/24/%E5%AE%89%E5%85%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="安全操作系统设计"><a href="#安全操作系统设计" class="headerlink" title="安全操作系统设计"></a>安全操作系统设计</h1><p>安全策略、安全机制概念（考）</p>
<p>安全需求：CIA（机密性、完整性、可用性）</p>
<h1 id="安全策略分类："><a href="#安全策略分类：" class="headerlink" title="安全策略分类："></a>安全策略分类：</h1><ul>
<li>访问支持策略</li>
<li>访问控制策略</li>
</ul>
<h2 id="访问支持策略"><a href="#访问支持策略" class="headerlink" title="访问支持策略"></a>访问支持策略</h2><p>标识与鉴别</p>
<ul>
<li>用户标识</li>
<li>用户鉴别</li>
</ul>
<p>可记账性：</p>
<ul>
<li>要求任何影响系统安全性的行为都被跟踪和记录在案</li>
<li>审计信息必须有选择性的保留和保护</li>
</ul>
<p>‍</p>
<h2 id="访问控制策略"><a href="#访问控制策略" class="headerlink" title="访问控制策略"></a>访问控制策略</h2><p>主体、客体、主客体属性</p>
<p>主体是主动的实体，是系统内行为的发起者</p>
<p>主体属性是用户特征，系统用于访问控制的常用因素</p>
<p>客体是被动的实体，是系统内所有主体行为的直接承担者</p>
<p>访问控制表</p>
<p>分类：</p>
<ul>
<li>自主访问控制策略</li>
<li>强制访问控制策略（BLP）</li>
</ul>
<h1 id="可信计算基（TCB）"><a href="#可信计算基（TCB）" class="headerlink" title="可信计算基（TCB）"></a>可信计算基（TCB）</h1><p>计算机内保护装置的总体，包括软件、硬件、和负责执行安全策略的组合体</p>
<h1 id="安全模型特点"><a href="#安全模型特点" class="headerlink" title="安全模型特点"></a>安全模型特点</h1><ol>
<li>精确的、无歧义的</li>
<li>简易的、抽象的</li>
<li>只涉及安全性质、不限制系统功能的实现</li>
<li>安全策略的清晰表达</li>
</ol>
<h1 id="安全模型"><a href="#安全模型" class="headerlink" title="安全模型"></a>安全模型</h1><p>‍</p>
<h2 id="BLP模型"><a href="#BLP模型" class="headerlink" title="BLP模型"></a>BLP模型</h2><p>简单安全特性：不能向上读</p>
<p>*特性：不能往下写</p>
<p>保证了机密性</p>
<p>‍</p>
<h2 id="BIBA模型"><a href="#BIBA模型" class="headerlink" title="BIBA模型"></a>BIBA模型</h2><p>安全策略与BLP相反</p>
<p>不能向上写，不能往下读</p>
<p>保证了完整性</p>
<p>‍</p>
<h2 id="RBAC模型"><a href="#RBAC模型" class="headerlink" title="RBAC模型"></a>RBAC模型</h2><p>基于角色的访问控制。核心思想是将权限同用户联系起来</p>
<p>用户的权限通过赋予相应的角色来完成</p>
<p>RBAC与DAC的根本区别：用户不能自主的将访问权限授给别的用户</p>
<p>‍</p>
<h1 id="安全机制"><a href="#安全机制" class="headerlink" title="安全机制"></a>安全机制</h1><h2 id="硬件安全机制"><a href="#硬件安全机制" class="headerlink" title="硬件安全机制"></a>硬件安全机制</h2><ul>
<li>存储保护</li>
<li>运行保护</li>
<li>I&#x2F;O保护</li>
</ul>
<h2 id="认证机制"><a href="#认证机制" class="headerlink" title="认证机制"></a>认证机制</h2><p>‍</p>
<h2 id="加密机制"><a href="#加密机制" class="headerlink" title="加密机制"></a>加密机制</h2><h3 id="加密技术分类"><a href="#加密技术分类" class="headerlink" title="加密技术分类"></a>加密技术分类</h3><p>数据传输加密技术</p>
<p>数据存储加密技术</p>
<p>‍</p>
<p>密码体制分类：非对称、对称</p>
<h2 id="审计机制"><a href="#审计机制" class="headerlink" title="审计机制"></a>审计机制</h2><p>一种事后手段</p>
<p>• 对系统中有关安全的活动进行记录</p>
<p>• 认定违反安全规则的行为</p>
<h1 id="安全操作系统设计-1"><a href="#安全操作系统设计-1" class="headerlink" title="安全操作系统设计"></a>安全操作系统设计</h1><h2 id="（考）设计原则："><a href="#（考）设计原则：" class="headerlink" title="（考）设计原则："></a>（考）设计原则：</h2><ol>
<li><h3 id="最小特权："><a href="#最小特权：" class="headerlink" title="最小特权："></a>最小特权：</h3><p>（含义可能考）</p>
<p>为了使无意或有意的攻击造成的损失达到最低程度，每个用户和程序必须按照“需要”原则，尽可能使用最小特权</p>
</li>
<li><p><strong>机制的经济性</strong></p>
</li>
<li><p><strong>开放系统设计</strong></p>
</li>
<li><p><strong>完整的访问控制机制</strong></p>
</li>
<li><p><strong>基于<strong><strong>“允许”</strong></strong>的设计原则</strong>S</p>
</li>
<li><p><strong>权限分离</strong></p>
</li>
<li><p><strong>避免信息流的潜在通道</strong></p>
</li>
<li><p><strong>用户友好</strong></p>
</li>
</ol>
<p>‍</p>
<h2 id="开发方法"><a href="#开发方法" class="headerlink" title="开发方法"></a>开发方法</h2><h3 id="改进-增强法"><a href="#改进-增强法" class="headerlink" title="改进&#x2F;增强法"></a>改进&#x2F;增强法</h3><p>在现有操作系统的基础上对其内核和应用程序进行面向安全策略的分析，然后加入安全机制，经改造、开发后的安全操作系统基本上保持了原ISOS的用户接口界面</p>
<p>优点：不破坏原系统的体系结构，开发代价小，且能很好地保持原ISOS的用户接口界面和系统效率</p>
<p>缺点：改进&#x2F;增强法是受原操作系统体系结构和现有应用程序的限制，很难达到很高（如B2级以上）的安全级别  </p>
<h3 id="虚拟机法"><a href="#虚拟机法" class="headerlink" title="虚拟机法"></a>虚拟机法</h3><p>在现有操作系统与硬件之间增加一个新的分层作为安全内核，操作系统几乎不变地作为虚拟机来运行</p>
<p><strong>优点</strong>：安全内核的接口几乎与原有硬件编程接口等价，操作系统本身并未意识到已被安全内核控制，仍像在裸机上一样执行它自己的进程和内存管理功能，可以不变地支持现有的应用程序，且能很好地兼容ISOS的将来版本</p>
<p>虚拟机法在KVM中运用得相当成功，由于硬件（IBM370）和原有操作系统（VM&#x2F;370）的结构都支持虚拟机</p>
<p><strong>缺点</strong>：虚拟机法增强操作系统的安全性时，硬件特性对虚拟机的实现非常关键，它要求原系统的硬件和结构都要支持虚拟机  </p>
<h3 id="仿真法"><a href="#仿真法" class="headerlink" title="仿真法"></a>仿真法</h3><p>现有操作系统的内核进行面向安全策略的分析和修改以形成安全内核，然后在安全内核与原ISOS用户接口界面中间再编写一层仿真程序</p>
<p><strong>优点</strong>：在于在建立安全内核时，可以不必受现有应用程序的限制，且可以完全自由地定义ISOS仿真程序与安全内核之间的接口</p>
<p><strong>缺点</strong>：这种方法要同时设计仿真程序和安全内核，还要受顶层ISOS接口的限制。另外根据安全策略，有些ISOS的接口功能不安全，从而不能仿真；有些接口功能尽管安全，但仿真实现特别困难  </p>
<p>‍</p>
<h2 id="安全机制的友好型"><a href="#安全机制的友好型" class="headerlink" title="安全机制的友好型"></a>安全机制的友好型</h2><p>在设计安全机制的整个过程中，必须遵守三条原则</p>
<h3 id="三条原则"><a href="#三条原则" class="headerlink" title="三条原则"></a>三条原则</h3><ul>
<li>安全不应该影响遵守规则的用户</li>
<li>便于用户的授权存取</li>
<li>便于用户的控制存取</li>
</ul>
<h2 id="TCB的设计与设计"><a href="#TCB的设计与设计" class="headerlink" title="TCB的设计与设计"></a>TCB的设计与设计</h2><ul>
<li>生命周期支持</li>
<li>测试</li>
<li>脆弱性评定</li>
</ul>
<p>‍</p>
<h2 id="操作系统安全评测方法"><a href="#操作系统安全评测方法" class="headerlink" title="操作系统安全评测方法"></a>操作系统安全评测方法</h2><ul>
<li><p>形式化验证</p>
</li>
<li><p>非形式化确认</p>
<p>安全需求检查、设计及代码检查、模块及系统测试</p>
</li>
<li><p>入侵测试</p>
</li>
</ul>
<h1 id="SELinux"><a href="#SELinux" class="headerlink" title="SELinux"></a>SELinux</h1><p>‍</p>
<h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="安全审计时用到的日志："><a href="#安全审计时用到的日志：" class="headerlink" title="安全审计时用到的日志："></a>安全审计时用到的日志：</h2><p>系统日志、应用程序日志、安全日志</p>
<p>‍</p>
<h2 id="Windows7-用户账户控制"><a href="#Windows7-用户账户控制" class="headerlink" title="Windows7 用户账户控制"></a>Windows7 用户账户控制</h2><p>用户账户控制（UAC）是vista提出的</p>
<p>‍</p>
<h2 id="BitLocker"><a href="#BitLocker" class="headerlink" title="BitLocker"></a>BitLocker</h2><p>Windows7中BitLocker可以对U盘和移动硬盘进行加密并且操作简单</p>
<p>Powershell v2</p>
<h1 id="安胜OS（国产）"><a href="#安胜OS（国产）" class="headerlink" title="安胜OS（国产）"></a>安胜OS（国产）</h1><p>多级安全模型：BLP<br>‍<br>国产数据库：达梦</p>
<h1 id="国内外的安全标准"><a href="#国内外的安全标准" class="headerlink" title="国内外的安全标准"></a>国内外的安全标准</h1><p>TCSEC</p>
<p>ITSEC</p>
<p>CC</p>
<p>我国相关标准</p>
<p><img src="https://obsidian-0914-1320470419.cos.ap-guangzhou.myqcloud.com/Obsidianimage-20230630101149-keq29aj.png" alt="image">​</p>
<p><img src="https://obsidian-0914-1320470419.cos.ap-guangzhou.myqcloud.com/Obsidianimage-20230630101240-i5ik4hl.png" alt="image">​</p>
<p><img src="https://obsidian-0914-1320470419.cos.ap-guangzhou.myqcloud.com/Obsidianimage-20230630101254-d81s2me.png" alt="image">​</p>
<p><img src="https://obsidian-0914-1320470419.cos.ap-guangzhou.myqcloud.com/Obsidianimage-20230630101325-vyjbawf.png" alt="image">​</p>
<p>什么是等级保护？</p>
<p>等级保护是指对国家重要信息，法人和其他组织及公民的专有信息以及公开信息和存储、传输、处理这些信息的信息系统分等级实行安全保护，对信息系统中使用的信息安全产品实行按等级管理，对信息系统中发生的信息安全事件分等级相应、处置</p>
<p>‍</p>
]]></content>
      <categories>
        <category>操作系统安全</category>
      </categories>
  </entry>
  <entry>
    <title>数字签名</title>
    <url>/2024/09/24/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</url>
    <content><![CDATA[<h1 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h1><p>先签名再加密</p>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h3><p>密码的概念：密码是密码算法的简称，由加密算法和解密算法组成</p>
<p><font color="#f79646">什么是受限算法？</font></p>
<p>如果算法的保密性是基于保持算法的秘密，这种算法称为受限算法</p>
<p>密钥：密码算法中引进的控制参数</p>
<p>‍</p>
<h3 id="密码的安全性"><a href="#密码的安全性" class="headerlink" title="密码的安全性"></a>密码的安全性</h3><h4 id="攻击方法"><a href="#攻击方法" class="headerlink" title="攻击方法"></a>攻击方法</h4><ul>
<li>穷举法<br>对抗穷举法的方法：增大密钥长度</li>
<li>统计分析法<br>对抗统计分析方法： 1：混乱性   2：扩散性</li>
<li>数学分析攻击</li>
<li>社会工程攻击<br>对抗方法：信息隐藏技术</li>
</ul>
<h3 id="影响密码安全性的因素"><a href="#影响密码安全性的因素" class="headerlink" title="影响密码安全性的因素"></a>影响密码安全性的因素</h3><p>算法复杂度，密钥机密性，密钥长度</p>
<h3 id="密码体制（对称，非对称密钥）"><a href="#密码体制（对称，非对称密钥）" class="headerlink" title="密码体制（对称，非对称密钥）"></a>密码体制（对称，非对称密钥）</h3><p>管理密钥数（考）</p>
<ul>
<li>对称密钥：双方密钥一样<br>  （ N个人两两通信，需要的密钥数为n*(n-1)&#x2F;2）</li>
<li>非对称密钥：双方密钥不一样<br>  （N个人两两通信，需要的密钥数2n）</li>
</ul>
<h3 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h3><ul>
<li><p>密钥产生：要求在安全的环境中产生，同时要避免弱密钥产生</p>
</li>
<li><p>密钥分配</p>
</li>
<li><p>密钥使用：应当根据不同需要使用不同的密钥，如身份认证使用公私密钥，会话使用对称密钥</p>
</li>
</ul>
<p>密钥要能被撤销</p>
<h3 id="哈希函数"><a href="#哈希函数" class="headerlink" title="哈希函数"></a>哈希函数</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol>
<li>处理任何大小的信息</li>
<li>不可逆的</li>
<li>抗碰撞的</li>
</ol>
<h4 id="哈希函数的应用"><a href="#哈希函数的应用" class="headerlink" title="哈希函数的应用"></a>哈希函数的应用</h4><ol>
<li><p>校验数据完整性</p>
</li>
<li><p>消息认证</p>
</li>
<li><p>数字签名</p>
</li>
<li><p>保护用户口令：</p>
<p> 将用户口令进行哈希计算后存入数据库中</p>
</li>
</ol>
<h2 id="数字签名概念"><a href="#数字签名概念" class="headerlink" title="数字签名概念"></a>数字签名概念</h2><p>数字签名是只有发送者才能产生的别人无法伪造的一段字符串，这段数字串同时也是发送者对这段信息真实性的一个有效证明</p>
<h3 id="数字签名特性"><a href="#数字签名特性" class="headerlink" title="数字签名特性"></a>数字签名特性</h3><ul>
<li>不可否任性</li>
<li>不可伪造性</li>
<li>可认证性</li>
</ul>
<p>数字签名过程：<br>发送方用自己的私钥签名，接收方用公钥解密</p>
<p><font color="#f79646">普通数字签名</font>：RSA，ELgamal，椭圆曲线<br><font color="#f79646">特殊数字签名</font>：盲签，代理签名，群签名</p>
<h2 id="数字签名算法"><a href="#数字签名算法" class="headerlink" title="数字签名算法"></a>数字签名算法</h2><h3 id="1-基于公钥密码体制的数字签名"><a href="#1-基于公钥密码体制的数字签名" class="headerlink" title="1.基于公钥密码体制的数字签名"></a>1.基于公钥密码体制的数字签名</h3><p>在对明文进行加密时，开销太大，如何改善？<br><img src="https://obsidian-0914-1320470419.cos.ap-guangzhou.myqcloud.com/Obsidianimage-20230519155315-z9x0yoa.png" alt="image"></p>
<h3 id="2-基于公钥密码体制和哈希函数的数字签名"><a href="#2-基于公钥密码体制和哈希函数的数字签名" class="headerlink" title="2.基于公钥密码体制和哈希函数的数字签名"></a>2.基于公钥密码体制和哈希函数的数字签名</h3><p>改善方法：对明文进行哈希运算，再加密<br><img src="https://obsidian-0914-1320470419.cos.ap-guangzhou.myqcloud.com/Obsidianimage-20230519155454-qtxyzds.png" alt="image"></p>
<h3 id="3-基于对称加密算法的数字签名"><a href="#3-基于对称加密算法的数字签名" class="headerlink" title="3.基于对称加密算法的数字签名"></a>3.基于对称加密算法的数字签名</h3><p>利用一组长度是报文的比特数（n)的两倍的密钥A，来产生对签名的验证信息，即随机选择2n个数B，由签名对这2n个数B进行一次加密变换，得到另一组2n个数C</p>
<h3 id="了解什么场合使用什么签名"><a href="#了解什么场合使用什么签名" class="headerlink" title="了解什么场合使用什么签名"></a>了解什么场合使用什么签名</h3><h3 id="盲签名"><a href="#盲签名" class="headerlink" title="盲签名"></a>盲签名</h3><p>要求：</p>
<ul>
<li>消息内容对签名者不可见</li>
<li>签名被接收者泄露后，签名者无法追踪签名。签名者不能将盲签名和盲消息对应起来</li>
</ul>
<h3 id="代理签名"><a href="#代理签名" class="headerlink" title="代理签名"></a>代理签名</h3><p>了解什么场合使用什么签名</p>
<p>原始签名人授权他的签名权给代理签名人，让代理签名人代理原始签名人生成有效的签名</p>
<p>特性：</p>
<ul>
<li>不可伪造性</li>
<li>可验证性</li>
<li>可识别性</li>
<li>不可否认性</li>
</ul>
<h3 id="群签名"><a href="#群签名" class="headerlink" title="群签名"></a>群签名</h3><p>了解什么场合使用什么签名</p>
<p>特点：</p>
<ul>
<li>群特性：只有群中成员能够代表全体签名</li>
<li>验证简单性：接收者可以用公钥验证群签名</li>
<li>无条件匿名保护：接收者不能知道是群中哪个成员签的</li>
<li>可追查性：发生争议时，群体中的成员或可信赖结构可以识别签名者</li>
</ul>
<h3 id="2004年，我国颁布《中华人民共和国电子签名法》"><a href="#2004年，我国颁布《中华人民共和国电子签名法》" class="headerlink" title="2004年，我国颁布《中华人民共和国电子签名法》"></a>2004年，我国颁布《中华人民共和国电子签名法》</h3>]]></content>
      <categories>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>数字签名</tag>
      </tags>
  </entry>
  <entry>
    <title>数学建模-论文手</title>
    <url>/2023/09/20/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h1><p>基于XXX模型的XXX问题研究</p>
<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a><strong>摘要</strong></h1><p>不要加图或者表或者公式，不超过一页800-1000字</p>
<p>开头模板：本文主要研究了XXX问题，根据XXX,利用XXX模型&#x2F;方法，求解出XXX<br>摘要开头段不要写详细求解结果</p>
<p>中间段模板：针对问题一，根据&#x2F;考虑XXX….,建立XXX模型&#x2F;利用XXX方法，求解出XXX<br>优化类，预测类和物理类要明确数值，若数据过多可说明数据见附录</p>
<p>总结：<br>若写完后超过一页，可以不写<br>不要累赘重复前面的内容<br>加一些自夸</p>
<h1 id="正文要求"><a href="#正文要求" class="headerlink" title="正文要求"></a><strong>正文要求</strong></h1><p>不要超过三级标题<br>表格要用三线表<br>图和表都要有标题，表的标题在表的上方，图的标题在图的下方<br>重要公式右侧要有编号</p>
<h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>公式插入可以用mathpix<br>右侧编号的可以见建一个1x2的表格，左边填公式，右边插入序号<br>(  插入-&gt;文档部件 -&gt; 域 -&gt;autonum -&gt; (1)    )<br>后边再编写公式时直接复制即可</p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表的标题在表的上方（带序号）自动编号</p>
<h3 id="三线表"><a href="#三线表" class="headerlink" title="三线表"></a><strong>三线表</strong></h3><ol>
<li>插入表格</li>
<li>将样式应用于整个表格</li>
<li>先选择无边框，再选择上框线和下框线</li>
<li>格式中设置表格属性居中</li>
<li>将样式应用于标题行，选择下框线</li>
</ol>
<h3 id="表格自动编号"><a href="#表格自动编号" class="headerlink" title="表格自动编号"></a><strong>表格自动编号</strong></h3><p>（引入 -&gt;插入题注 -&gt;域 -&gt;(1)   )</p>
<h2 id="分页符"><a href="#分页符" class="headerlink" title="分页符"></a>分页符</h2><p>该符号后面的内容会到下一页中<br> （插入 -&gt; 分页）</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>格式规范<br>去除首行缩进，按正文出现顺序编号<br>加角标（WPS-&gt;开始+角标）</p>
]]></content>
      <categories>
        <category>数学建模</category>
      </categories>
  </entry>
  <entry>
    <title>数据预处理</title>
    <url>/2023/09/20/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a>缺失值</h1><ul>
<li>比赛提供的数据，发现有些单元格是null或空的</li>
<li>缺失太多例如调查人口信息，发现“年龄”这一项缺失了40%，就直接把该项指标删除</li>
<li><strong>最简单处理:均值、众数插补</strong><ul>
<li>定量数据，例如关于一群人的身高、年龄等数据，用整体的均值来补缺失</li>
<li>定性数据，例如关于一群人的性别、文化程度;某些事件调查的满意度，用出现次数最多的值补缺失.。</li>
<li>适用赛题:人口的数量年龄、经济产业情况等统计数据，对个体精度要求不大的数据</li>
</ul>
</li>
<li><strong>Newton插值法</strong><ul>
<li>根据固定公式，构造近似函数，补上缺失值，普遍适用性强</li>
<li>缺点: 区间边缘处的不稳定震荡，即龙格现象。不适合对导数有要求的题目</li>
<li>适用赛题: 热力学温度、地形测量、定位等只追求函数值精准而不关心变化的数据</li>
</ul>
</li>
<li><strong>样条插值法</strong><ul>
<li>用分段光滑的曲线去插值，光滑意味着曲线不仅连续，还要有连续的曲率</li>
<li>适用赛题: 零件加工、水库水流量，图像“基线漂移”，机器人轨迹等精度要求高、没有突变的数据</li>
</ul>
</li>
</ul>
<h1 id="异常值"><a href="#异常值" class="headerlink" title="异常值"></a>异常值</h1><ul>
<li><p>样本中明显和其他数值差异很大的数据，例如一群人的身高数据中有个3米2的</p>
</li>
<li><p><strong>正态分布3а原则</strong></p>
<ol>
<li>数值分布在 (u-3а,u+3а)中的概率为99.73%，其中u为平均值，а为标准差</li>
<li>求解步骤:1.计算均值u和标准差а;2判断每个数据值是否在 (u-3a,u+3а)内，不在则为异常值。</li>
<li><strong>适用题目</strong>: 总体符合正态分布，例如人口数据、测量误差、生产加工质量、考试成绩等。</li>
<li><strong>不适用题目</strong>: 总体符合其他分布，例如公交站人数排队论符合泊松分布</li>
</ol>
</li>
<li><p><strong>画箱型图</strong></p>
<ol>
<li>箱型图中，把数据从小到大排序。下四分位数Q1是排第25%的数值，上四分位数Q3是排第75%的数值</li>
<li>四分位距IQR&#x3D;Q3-Q1，也就是排名第75%的减去第25%的数值</li>
<li>与正态分布类似，设置个<strong>合理区间</strong>，在<strong>区间外的就是异常值</strong></li>
<li>一般设[Q1-1.5<em>IQR，Q3 +1.5</em>IQR]内为正常值</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>数学建模</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
      </tags>
  </entry>
</search>
